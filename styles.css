:root {
  --timing: 400ms;
  --rotation: 20deg;
}

body {
  display: grid;
  place-content: center;
  min-height: 100vh;
  perspective: 1000px;
}

img {
  max-width: 100%;
}

.card {
  width: 300px;
  aspect-ratio: 9 / 16;
  position: relative;
  transform-style: preserve-3d;
  transition: transform var(--timing) ease; /* Use transform for smoother animations */
  cursor: pointer; /* Add cursor pointer for touch devices */
}

/* Use :hover and :active for both hover and touch events */
.card:hover,
.card:active {
  transform: rotateX(var(--rotation)); /* Rotate on hover or touch */
}

.card::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 100;
  background-image: radial-gradient(circle, transparent 150px, black);
  opacity: 0;
  transition: opacity var(--timing);
}

.card:hover::before,
.card:active::before {
  opacity: 1;
}

.card::after {
  content: "";
  position: absolute;
  inset: 100% 0.5rem 0.5rem;
  translate: 0;
  transform: translateZ(-100px);
  background: black;
  filter: blur(1rem);
  z-index: 1;
  transition: transform var(--timing); /* Use transform for smoother animations */
}

.card:hover::after,
.card:active::after {
  transform: rotateX(calc(var(--rotation) * -1)) translateY(30px); /* Rotate and translate on hover or touch */
}

.bg-image {
  position: absolute;
  z-index: 10;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.logo,
.front-image {
  position: absolute;
}

.logo {
  z-index: 1000;
  filter: invert(1);
  width: 65%;
  margin-inline: auto;
  inset: auto 0 2rem;
  transform: translateY(0rem) translateZ(20px);
  transition: var(--timing);
}

/* Use :hover and :active for both hover and touch events */
.card:hover .logo,
.card:active .logo {
  transform: translateY(-2rem) translateZ(20px) rotateX(calc(var(--rotation) * -1)); /* Rotate, translate, and scale on hover or touch */
}

.front-image {
  scale: 1.125;
  transform-origin: bottom;
  opacity: 0;
  z-index: 100;
  transition: var(--timing);
}

/* Use :hover and :active for both hover and touch events */
.card:hover .front-image,
.card:active .front-image {
  opacity: 1;
  transform: translateY(-1rem) translateZ(-10px) rotateX(calc(var(--rotation) * -1)); /* Rotate, translate, and scale on hover or touch */
}




/* :root {
  --timing: 400ms;
  --rotation: 20deg;
}

body {
  display: grid;
  place-content: center;
  min-height: 100vh;
  perspective: 1000px;
}

img {
  max-width: 100%;
}

.card {
  width: 300px;
  aspect-ratio: 9 / 16;
  position: relative;
  transform-style: preserve-3d;
  transition: rotate var(--timing) ease;
}

.card:hover {
  rotate: x var(--rotation);
}



.card::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: 100;
  background-image: radial-gradient(circle, transparent 150px, black);
  opacity: 0;
  transition: opacity var(--timing);
}

.card:hover::before {
  opacity: 1;
}

.card::after {
  content: "";
  position: absolute;
  inset: 100% 0.5rem 0.5rem;
  translate: 0;
  transform: translateZ(-100px);
  background: black;
  filter: blur(1rem);
  z-index: 1;
  transition: rotate var(--timing), translate var(--timing);
}

.card:hover::after {
  rotate: x calc(var(--rotation) * -1);
  translate: 0 30px;
}

.bg-image {
  position: absolute;
  z-index: 10;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.logo,
.front-image {
  position: absolute;
}

.logo {
  z-index: 1000;
  filter: invert(1);
  width: 65%;
  margin-inline: auto;
  inset: auto 0 2rem;
  transform: translateY(0rem) translateZ(20px);
  transition: var(--timing);
}

.card:hover .logo {
  transform: translateY(-2rem) translateZ(20px);
  rotate: x calc(var(--rotation) * -1);
}

.front-image {
  scale: 1.125;
  transform-origin: bottom;
  opacity: 0;
  z-index: 100;
  transition: var(--timing);
}

.card:hover .front-image {
  opacity: 1;
  transform: translateY(-1rem) translateZ(-10px);
  rotate: x calc(var(--rotation) * -1);
} */








/* :root {
    --timing: 400ms;
    --rotation: 20deg;
  }
  
  html {
    color-scheme: dark;
  }
  
  body {
    display: grid;
    place-content: center;
    min-height: 100vh;
    perspective: 1000px;
  }
  
  img {
    max-width: 100%;
  }
  
  .card {
    width: 300px;
    aspect-ratio: 9 / 16;
    position: relative;
    transform-style: preserve-3d;
    transition: rotate var(--timing) ease;
  }
  
  .card:hover {
    rotate: x var(--rotation);
  }
  
  .card::before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: 100;
    background-image: radial-gradient(circle, transparent 150px, black);
    opacity: 0;
    transition: opacity var(--timing);
  }
  
  .card:hover::before {
    opacity: 1;
  }
  
  .card::after {
    content: "";
    position: absolute;
    inset: 80% 0.5rem 0.5rem;
    translate: 0;
    transform: translateZ(-100px);
    background: black;
    filter: blur(1rem);
    z-index: 1;
    transition: rotate var(--timing), translate var(--timing);
  }
  
  .card:hover::after {
    rotate: x calc(var(--rotation) * -1);
    translate: 0 60px;
  }
  
  .bg-image {
    position: absolute;
    z-index: 10;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
  
  .logo,
  .front-image {
    position: absolute;
  }
  
  .logo {
    z-index: 1000;
    filter: invert(1);
    width: 65%;
    margin-inline: auto;
    inset: auto 0 2rem;
    transform: translateY(0rem) translateZ(20px);
    transition: var(--timing);
  }
  
  .card:hover .logo {
    transform: translateY(-2rem) translateZ(20px);
    rotate: x calc(var(--rotation) * -1);
  }
  
  .front-image {
    scale: 1.125;
    transform-origin: bottom;
    opacity: 0;
    z-index: 100;
    transition: var(--timing);
  }
  
  .card:hover .front-image {
    opacity: 1;
    transform: translateY(-2rem) translateZ(-10px);
    rotate: x calc(var(--rotation) * -1);
  }  